/* Generated By:JavaCC: Do not edit this line. MemeCompilatorConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MemeCompilatorConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PARA = 5;
  /** RegularExpression Id. */
  int PARACADA = 6;
  /** RegularExpression Id. */
  int DENTRO = 7;
  /** RegularExpression Id. */
  int SE = 8;
  /** RegularExpression Id. */
  int SENAO = 9;
  /** RegularExpression Id. */
  int RETORNO = 10;
  /** RegularExpression Id. */
  int FUNCAO = 11;
  /** RegularExpression Id. */
  int MOSTRAR = 12;
  /** RegularExpression Id. */
  int ASPAS = 13;
  /** RegularExpression Id. */
  int PARENTESE_DIREITO = 14;
  /** RegularExpression Id. */
  int PARENTESE_ESQUERDO = 15;
  /** RegularExpression Id. */
  int CHAVE_DIREITA = 16;
  /** RegularExpression Id. */
  int CHAVE_ESQUERDA = 17;
  /** RegularExpression Id. */
  int VIRGULA = 18;
  /** RegularExpression Id. */
  int FIMLINHA = 19;
  /** RegularExpression Id. */
  int INICIOPROGRAMA = 20;
  /** RegularExpression Id. */
  int FIMPROGRAMA = 21;
  /** RegularExpression Id. */
  int INTEIRO = 22;
  /** RegularExpression Id. */
  int REAL = 23;
  /** RegularExpression Id. */
  int BOOLEAN = 24;
  /** RegularExpression Id. */
  int TEXTO = 25;
  /** RegularExpression Id. */
  int MAIOR = 26;
  /** RegularExpression Id. */
  int MENOR = 27;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 28;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 29;
  /** RegularExpression Id. */
  int IGUAL = 30;
  /** RegularExpression Id. */
  int NEGAÇÃO = 31;
  /** RegularExpression Id. */
  int ATRIBUICAO = 32;
  /** RegularExpression Id. */
  int AND = 33;
  /** RegularExpression Id. */
  int OR = 34;
  /** RegularExpression Id. */
  int INC = 35;
  /** RegularExpression Id. */
  int DECRE = 36;
  /** RegularExpression Id. */
  int CONSTANTE = 37;
  /** RegularExpression Id. */
  int DIGITO = 38;
  /** RegularExpression Id. */
  int LETRA = 39;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 40;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"nala\"",
    "\"alna\"",
    "\"in\"",
    "\"wity\"",
    "\"capaz_wity\"",
    "\"volta_caralho\"",
    "\" FUNCTION \"",
    "\"ehoradoshow\"",
    "\"\\\'\"",
    "\")\"",
    "\"(\"",
    "\"}\"",
    "\"{\"",
    "\",\"",
    "\"moro\"",
    "\"OLA_MARILENE\"",
    "\"E_SOH\"",
    "\"noite\"",
    "\"tainha\"",
    "\"vinho\"",
    "\"muito_sexo\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"suvacoaxila\"",
    "\"capaz\"",
    "\"tomale\"",
    "\"and\"",
    "\"or\"",
    "\"++\"",
    "\"--\"",
    "<CONSTANTE>",
    "<DIGITO>",
    "<LETRA>",
    "<IDENTIFICADOR>",
  };

}
